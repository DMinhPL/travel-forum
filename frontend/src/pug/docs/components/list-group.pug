extends ../../layouts/_layout_doc 
block setting
    -var mainActive = 'docs';
    -var slideActive = 'list-group';
    - title = "Component - List group"

block navsection
    ul.section-nav
        li.toc-entry.toc-h2
            a(href='#basic-example') Basic example
        li.toc-entry.toc-h2
            a(href='#active-items') Active items
        li.toc-entry.toc-h2
            a(href='#disabled-items') Disabled items
        li.toc-entry.toc-h2
            a(href='#links-and-buttons') Links and buttons
        li.toc-entry.toc-h2
            a(href='#flush') Flush
        li.toc-entry.toc-h2
            a(href='#contextual-classes') Contextual classes
        li.toc-entry.toc-h2
            a(href='#with-badges') With badges
        li.toc-entry.toc-h2
            a(href='#custom-content') Custom content
        li.toc-entry.toc-h2
            a(href='#javascript-behavior') JavaScript behavior
            ul
                li.toc-entry.toc-h3
                    a(href='#using-data-attributes') Using data attributes
                li.toc-entry.toc-h3
                    a(href='#via-javascript') Via JavaScript
                li.toc-entry.toc-h3
                    a(href='#fade-effect') Fade effect
                li.toc-entry.toc-h3
                    a(href='#methods') Methods
                    ul
                        li.toc-entry.toc-h4
                            a(href='#tab') $().tab
                        li.toc-entry.toc-h4
                            a(href='#tabshow') .tab(‘show’)
                li.toc-entry.toc-h3
                    a(href='#events') Events

block content 
    h1.bd-title#content List group
    p.bd-lead 
        | List groups are a flexible and powerful component for displaying a series of content. 
        | Modify and extend them to support just about any content within.
    h2#basic-example Basic example
    p
        | The most basic list group is an unordered list with list items and the proper classes. Build upon it with the options that follow, or with your own CSS as needed.
    .bd-example
        +list-group([
            {text:'Cras justo odio'},
            {text:'Dapibus ac facilisis in'},
            {text:'Morbi leo risus'},
            {text:'Porta ac consectetur ac'},
            {text:'Vestibulum at eros'}
        ])
    
    figure.highlight
        pre
            code.js.
                +list-group([
                    {text:'Cras justo odio'},
                    {text:'Dapibus ac facilisis in'},
                    {text:'Morbi leo risus'},
                    {text:'Porta ac consectetur ac'},
                    {text:'Vestibulum at eros'}
                ])

    h2#active-items Active items
    p
        | Add 
        code.highlighter-rouge .active
        |  to a 
        code.highlighter-rouge .list-group-item
        |  to indicate the current active selection.
    .bd-example
        +list-group([
            {text:'Cras justo odio',style:'active'},
            {text:'Dapibus ac facilisis in'},
            {text:'Morbi leo risus'},
            {text:'Porta ac consectetur ac'},
            {text:'Vestibulum at eros'}
        ])

    figure.highlight
        pre
            code.js.
                +list-group([
                    {text:'Cras justo odio',style:'active'},
                    {text:'Dapibus ac facilisis in'},
                    {text:'Morbi leo risus'},
                    {text:'Porta ac consectetur ac'},
                    {text:'Vestibulum at eros'}
                ])
    
    h2#disabled-items Disabled items
    p
        | Add 
        code.highlighter-rouge .disabled
        |  to a 
        code.highlighter-rouge .list-group-item
        |  to make it 
        em appear
        |  disabled. Note that some elements with 
        code.highlighter-rouge .disabled
        |  will also require custom JavaScript to fully disable their click events (e.g., links).
    .bd-example
        +list-group([
            {text:'Cras justo odio',style:'disabled'},
            {text:'Dapibus ac facilisis in'},
            {text:'Morbi leo risus'},
            {text:'Porta ac consectetur ac'},
            {text:'Vestibulum at eros'}
        ])
    
    figure.highlight
        pre
            code.js.
                +list-group([
                    {text:'Cras justo odio',style:'disabled'},
                    {text:'Dapibus ac facilisis in'},
                    {text:'Morbi leo risus'},
                    {text:'Porta ac consectetur ac'},
                    {text:'Vestibulum at eros'}
                ])

    h2#links-and-buttons Links and buttons
    p
        | Use 
        code.highlighter-rouge &lt;a&gt;
        | s or 
        code.highlighter-rouge &lt;button&lt;;
        | s to create 
        em actionable
        |  list group items with hover, disabled, and active states by adding 
        code.highlighter-rouge .list-group-item-action
        | . We separate these pseudo-classes to ensure list groups made of non-interactive elements (like 
        code.highlighter-rouge &lt;li&gt;
        | s or 
        code.highlighter-rouge &lt;div&gt;
        | s) don’t provide a click or tap affordance.
    p
        | Be sure to 
        strong
            | not use the standard 
            code.highlighter-rouge .btn
            |  classes here
        | .
    .bd-example
        +list-group-a([
            {text:'Cras justo odio',url:'#',style:'active'},
            {text:'Dapibus ac facilisis in',url:'#'},
            {text:'Morbi leo risus',url:'#'},
            {text:'Porta ac consectetur ac',url:'#'},
            {text:'Vestibulum at eros',url:'#',style:'disabled'}
        ])

    figure.highlight
        pre
            code.js.
                +list-group-a([
                    {text:'Cras justo odio',url:'#',style:'active'},
                    {text:'Dapibus ac facilisis in',url:'#'},
                    {text:'Morbi leo risus',url:'#'},
                    {text:'Porta ac consectetur ac',url:'#'},
                    {text:'Vestibulum at eros',url:'#',style:'disabled'}
                ])

    p
        | With 
        code.highlighter-rouge &lt;button&lt;
        | s, you can also make use of the 
        code.highlighter-rouge disabled
        |  attribute instead of the 
        code.highlighter-rouge .disabled
        |  class. Sadly, 
        code.highlighter-rouge &lt;a&gt;
        | s don’t support the disabled attribute.
    .bd-example
        +list-group-button([
            {text:'Cras justo odio',url:'#',style:'active'},
            {text:'Dapibus ac facilisis in',url:'#'},
            {text:'Morbi leo risus',url:'#'},
            {text:'Porta ac consectetur ac',url:'#'},
            {text:'Vestibulum at eros',url:'#',style:'disabled'}
        ])
    
    figure.highlight
        pre
            code.js.
                +list-group-button([
                    {text:'Cras justo odio',url:'#',style:'active'},
                    {text:'Dapibus ac facilisis in',url:'#'},
                    {text:'Morbi leo risus',url:'#'},
                    {text:'Porta ac consectetur ac',url:'#'},
                    {text:'Vestibulum at eros',url:'#',style:'disabled'}
                ])

    h2#flush Flush
    p  Add 
        code.highlighter-rouge .list-group-flush
        |  to remove some borders and rounded corners to render list group items edge-to-edge in a parent container (e.g., cards).
    .bd-example
        +list-group([
            {text:'Cras justo odio'},
            {text:'Dapibus ac facilisis in'},
            {text:'Morbi leo risus'},
            {text:'Porta ac consectetur ac'},
            {text:'Vestibulum at eros'}
        ], 'list-group-flush')

    figure.highlight
        pre
            code.js.
                +list-group([
                    {text:'Cras justo odio'},
                    {text:'Dapibus ac facilisis in'},
                    {text:'Morbi leo risus'},
                    {text:'Porta ac consectetur ac'},
                    {text:'Vestibulum at eros'}
                ], 'list-group-flush')
    
    h2#contextual-classes Contextual classes
    p Use contextual classes to style list items with a stateful background and color.
    .bd-example
        +list-group([
            {text:'Dapibus ac facilisis in'},
            {text:'A simple primary list group item',color:'primary'},
            {text:'A simple secondary list group item',color:'secondary'},
            {text:'A simple success list group item',color:'success'},
            {text:'A simple danger list group item',color:'danger'},
            {text:'A simple warning list group item',color:'warning'},
            {text:'A simple info list group item',color:'info'},
            {text:'A simple light list group item',color:'light'},
            {text:'A simple dark list group item',color:'dark'}
        ])
    
    figure.highlight
        pre
            code.js.
                +list-group([
                    {text:'Dapibus ac facilisis in'},
                    {text:'A simple primary list group item',color:'primary'},
                    {text:'A simple secondary list group item',color:'secondary'},
                    {text:'A simple success list group item',color:'success'},
                    {text:'A simple danger list group item',color:'danger'},
                    {text:'A simple warning list group item',color:'warning'},
                    {text:'A simple info list group item',color:'info'},
                    {text:'A simple light list group item',color:'light'},
                    {text:'A simple dark list group item',color:'dark'}
                ])
    
    p
        | Contextual classes also work with 
        code.highlighter-rouge .list-group-item-action
        | . Note the addition of the hover styles here not present in the previous example. Also supported is the 
        code.highlighter-rouge .active
        |  state; apply it to indicate an active selection on a contextual list group item.
    .bd-example
        +list-group-a([
            {text:'Dapibus ac facilisis in',url:'#'},
            {text:'A simple primary list group item',url:'#',color:'primary'},
            {text:'A simple secondary list group item',url:'#',color:'secondary'},
            {text:'A simple success list group item',url:'#',color:'success'},
            {text:'A simple danger list group item',url:'#',color:'danger'},
            {text:'A simple warning list group item',url:'#',color:'warning'},
            {text:'A simple info list group item',url:'#',color:'info'},
            {text:'A simple light list group item',url:'#',color:'light'},
            {text:'A simple dark list group item',url:'#',color:'dark'}
        ])
    
    figure.highlight
        pre
            code.js. 
                +list-group-a([
                    {text:'Dapibus ac facilisis in',url:'#'},
                    {text:'A simple primary list group item',url:'#',color:'primary'},
                    {text:'A simple secondary list group item',url:'#',color:'secondary'},
                    {text:'A simple success list group item',url:'#',color:'success'},
                    {text:'A simple danger list group item',url:'#',color:'danger'},
                    {text:'A simple warning list group item',url:'#',color:'warning'},
                    {text:'A simple info list group item',url:'#',color:'info'},
                    {text:'A simple light list group item',url:'#',color:'light'},
                    {text:'A simple dark list group item',url:'#',color:'dark'}
                ])

    .bd-callout.bd-callout-warning
        h5#conveying-meaning-to-assistive-technologies Conveying meaning to assistive technologies
        p
            | Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies – such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text), or is included through alternative means, such as additional text hidden with the 
            code.highlighter-rouge .sr-only
            |  class.

    h2#with-badges With badges
    p
        | Add badges to any list group item to show unread counts, activity, and more with the help of some 
        a(href='/docs/4.1/utilities/flex/') utilities
        | .

    .bd-example
        +list-group()
            +list-item('Cras justo odio','d-flex justify-content-between align-items-center')
                +badge-primary('14', 'badge-pill')
            +list-item('Dapibus ac facilisis in','d-flex justify-content-between align-items-center')
                +badge-primary('2', 'badge-pill')
            +list-item('Morbi leo risus','d-flex justify-content-between align-items-center')
                +badge-primary('1', 'badge-pill')

    figure.highlight
        pre
            code.js.
                +list-group()
                    +list-item('Cras justo odio','d-flex justify-content-between align-items-center')
                        +badge-primary('14', 'badge-pill')
                    +list-item('Dapibus ac facilisis in','d-flex justify-content-between align-items-center')
                        +badge-primary('2', 'badge-pill')
                    +list-item('Morbi leo risus','d-flex justify-content-between align-items-center')
                        +badge-primary('1', 'badge-pill')
                
    h2#custom-content Custom content
    p
        | Add nearly any HTML within, even for linked list groups like the one below, with the help of 
        a(href='/docs/utilities/flex/') flexbox utilities
        | .
    .bd-example
        +list-group()
            +list-item('','flex-column align-items-start active','#')
                span.d-flex.w-100.justify-content-between
                    span.h5.mb-1 List group item heading
                    small 3 days ago
                span.mb-1 Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.
                small Donec id elit non mi porta.
            +list-item('','flex-column align-items-start','#')
                span.d-flex.w-100.justify-content-between
                    span.h5.mb-1 List group item heading
                    small.text-muted 3 days ago
                span.mb-1 Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.
                small Donec id elit non mi porta.
            +list-item('','flex-column align-items-start','#')
                span.d-flex.w-100.justify-content-between
                    span.h5.mb-1 List group item heading
                    small.text-muted 3 days ago
                span.mb-1 Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.
                small Donec id elit non mi porta.
    
    figure.highlight
        pre
            code.js.
                +list-group()
                    +list-item('','flex-column align-items-start active','#')
                        span.d-flex.w-100.justify-content-between
                            span.h5.mb-1 List group item heading
                            small 3 days ago
                        span.mb-1 Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.
                        small Donec id elit non mi porta.
                    +list-item('','flex-column align-items-start','#')
                        span.d-flex.w-100.justify-content-between
                            span.h5.mb-1 List group item heading
                            small.text-muted 3 days ago
                        span.mb-1 Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.
                        small Donec id elit non mi porta.
                    +list-item('','flex-column align-items-start','#')
                        span.d-flex.w-100.justify-content-between
                            span.h5.mb-1 List group item heading
                            small.text-muted 3 days ago
                        span.mb-1 Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.
                        small Donec id elit non mi porta.

    h2#javascript-behavior JavaScript behavior
    p
        | Use the tab JavaScript plugin—include it individually or through the compiled 
        code.highlighter-rouge bootstrap.js
        |  file—to extend our list group to create tabbable panes of local content.
    .bd-example(role='tabpanel')
        .row
            .col-4
                #list-tab.list-group(role='tablist')
                    a#list-home-list.list-group-item.list-group-item-action.active(data-toggle='tab', href='#list-home', role='tab', aria-controls='list-home') Home
                    a#list-profile-list.list-group-item.list-group-item-action(data-toggle='tab', href='#list-profile', role='tab', aria-controls='list-profile') Profile
                    a#list-messages-list.list-group-item.list-group-item-action(data-toggle='tab', href='#list-messages', role='tab', aria-controls='list-messages') Messages
                    a#list-settings-list.list-group-item.list-group-item-action(data-toggle='tab', href='#list-settings', role='tab', aria-controls='list-settings') Settings
            .col-8
                #nav-tabContent.tab-content
                    #list-home.tab-pane.fade.show.active(role='tabpanel', aria-labelledby='list-home-list')
                        p
                            | Velit aute mollit ipsum ad dolor consectetur nulla officia culpa adipisicing exercitation fugiat tempor. Voluptate deserunt sit sunt nisi aliqua fugiat proident ea ut. Mollit voluptate reprehenderit occaecat nisi ad non minim tempor sunt voluptate consectetur exercitation id ut nulla. Ea et fugiat aliquip nostrud sunt incididunt consectetur culpa aliquip eiusmod dolor. Anim ad Lorem aliqua in cupidatat nisi enim eu nostrud do aliquip veniam minim.
                    #list-profile.tab-pane.fade(role='tabpanel', aria-labelledby='list-profile-list')
                        p
                            | Cupidatat quis ad sint excepteur laborum in esse qui. Et excepteur consectetur ex nisi eu do cillum ad laborum. Mollit et eu officia dolore sunt Lorem culpa qui commodo velit ex amet id ex. Officia anim incididunt laboris deserunt anim aute dolor incididunt veniam aute dolore do exercitation. Dolor nisi culpa ex ad irure in elit eu dolore. Ad laboris ipsum reprehenderit irure non commodo enim culpa commodo veniam incididunt veniam ad.
                    #list-messages.tab-pane.fade(role='tabpanel', aria-labelledby='list-messages-list')
                        p
                            | Ut ut do pariatur aliquip aliqua aliquip exercitation do nostrud commodo reprehenderit aute ipsum voluptate. Irure Lorem et laboris nostrud amet cupidatat cupidatat anim do ut velit mollit consequat enim tempor. Consectetur est minim nostrud nostrud consectetur irure labore voluptate irure. Ipsum id Lorem sit sint voluptate est pariatur eu ad cupidatat et deserunt culpa sit eiusmod deserunt. Consectetur et fugiat anim do eiusmod aliquip nulla laborum elit adipisicing pariatur cillum.
                    #list-settings.tab-pane.fade(role='tabpanel', aria-labelledby='list-settings-list')
                        p
                            | Irure enim occaecat labore sit qui aliquip reprehenderit amet velit. Deserunt ullamco ex elit nostrud ut dolore nisi officia magna sit occaecat laboris sunt dolor. Nisi eu minim cillum occaecat aute est cupidatat aliqua labore aute occaecat ea aliquip sunt amet. Aute mollit dolor ut exercitation irure commodo non amet consectetur quis amet culpa. Quis ullamco nisi amet qui aute irure eu. Magna labore dolor quis ex labore id nostrud deserunt dolor eiusmod eu pariatur culpa mollit in irure.

    figure.highlight
        pre
            code.css 
                | .row
                |     .col-4
                |         #list-tab.list-group(role='tablist')
                |             a#list-home-list.list-group-item.list-group-item-action.active(data-toggle='tab', href='#list-home', role='tab', aria-controls='list-home') Home
                |             a#list-profile-list.list-group-item.list-group-item-action(data-toggle='tab', href='#list-profile', role='tab', aria-controls='list-profile') Profile
                |             a#list-messages-list.list-group-item.list-group-item-action(data-toggle='tab', href='#list-messages', role='tab', aria-controls='list-messages') Messages
                |             a#list-settings-list.list-group-item.list-group-item-action(data-toggle='tab', href='#list-settings', role='tab', aria-controls='list-settings') Settings
                |     .col-8
                |         #nav-tabContent.tab-content
                |             #list-home.tab-pane.fade.show.active(role='tabpanel', aria-labelledby='list-home-list')
                |                 p
                |                     | Velit aute mollit ipsum ad dolor consectetur nulla officia culpa adipisicing exercitation fugiat tempor. Voluptate deserunt sit sunt nisi aliqua fugiat proident ea ut. Mollit voluptate reprehenderit occaecat nisi ad non minim tempor sunt voluptate consectetur exercitation id ut nulla. Ea et fugiat aliquip nostrud sunt incididunt consectetur culpa aliquip eiusmod dolor. Anim ad Lorem aliqua in cupidatat nisi enim eu nostrud do aliquip veniam minim.
                |             #list-profile.tab-pane.fade(role='tabpanel', aria-labelledby='list-profile-list')
                |                 p
                |                     | Cupidatat quis ad sint excepteur laborum in esse qui. Et excepteur consectetur ex nisi eu do cillum ad laborum. Mollit et eu officia dolore sunt Lorem culpa qui commodo velit ex amet id ex. Officia anim incididunt laboris deserunt anim aute dolor incididunt veniam aute dolore do exercitation. Dolor nisi culpa ex ad irure in elit eu dolore. Ad laboris ipsum reprehenderit irure non commodo enim culpa commodo veniam incididunt veniam ad.
                |             #list-messages.tab-pane.fade(role='tabpanel', aria-labelledby='list-messages-list')
                |                 p
                |                     | Ut ut do pariatur aliquip aliqua aliquip exercitation do nostrud commodo reprehenderit aute ipsum voluptate. Irure Lorem et laboris nostrud amet cupidatat cupidatat anim do ut velit mollit consequat enim tempor. Consectetur est minim nostrud nostrud consectetur irure labore voluptate irure. Ipsum id Lorem sit sint voluptate est pariatur eu ad cupidatat et deserunt culpa sit eiusmod deserunt. Consectetur et fugiat anim do eiusmod aliquip nulla laborum elit adipisicing pariatur cillum.
                |             #list-settings.tab-pane.fade(role='tabpanel', aria-labelledby='list-settings-list')
                |                 p
                |                     | Irure enim occaecat labore sit qui aliquip reprehenderit amet velit. Deserunt ullamco ex elit nostrud ut dolore nisi officia magna sit occaecat laboris sunt dolor. Nisi eu minim cillum occaecat aute est cupidatat aliqua labore aute occaecat ea aliquip sunt amet. Aute mollit dolor ut exercitation irure commodo non amet consectetur quis amet culpa. Quis ullamco nisi amet qui aute irure eu. Magna labore dolor quis ex labore id nostrud deserunt dolor eiusmod eu pariatur culpa mollit in irure.
            
    h3#using-data-attributes Using data attributes
    p
        | You can activate a list group navigation without writing any JavaScript by simply specifying 
        code.highlighter-rouge data-toggle="list"
        |  or on an element. Use these data attributes on 
        code.highlighter-rouge .list-group-item
        | .

    figure.highlight
        pre
            code.css 
                | // List group
                | #myList.list-group(role='tablist')
                |     a.list-group-item.list-group-item-action.active(data-toggle='list', href='#home', role='tab') Home
                |     a.list-group-item.list-group-item-action(data-toggle='list', href='#profile', role='tab') Profile
                |     a.list-group-item.list-group-item-action(data-toggle='list', href='#messages', role='tab') Messages
                |     a.list-group-item.list-group-item-action(data-toggle='list', href='#settings', role='tab') Settings
                | // Tab panes
                | .tab-content
                |     #home.tab-pane.active(role='tabpanel') ...
                |     #profile.tab-pane(role='tabpanel') ...
                |     #messages.tab-pane(role='tabpanel') ...
                |     #settings.tab-pane(role='tabpanel') ...
    
    h3#via-javascript Via JavaScript
    p Enable tabbable list item via JavaScript (each list item needs to be activated individually):
    figure.highlight
        pre
            code.js 
                | $('#myList a').on('click', function (e) {
                |     e.preventDefault()
                |     $(this).tab('show')
                | })

    p You can activate individual list item in several ways:

    figure.highlight
        pre
            code.js
                | $('#myList a[href="#profile"]').tab('show') // Select tab by name
                | $('#myList a:first-child').tab('show') // Select first tab
                | $('#myList a:last-child').tab('show') // Select last tab
                | $('#myList a:nth-child(3)').tab('show') // Select third tab
    
    h3#fade-effect Fade effect
    p
        | To make tabs panel fade in, add 
        code.highlighter-rouge .fade
        |  to each 
        code.highlighter-rouge .tab-pane
        | . The first tab pane must also have 
        code.highlighter-rouge .show
        |  to make the initial content visible.

    figure.highlight
        pre
            code.css
                | .tab-content
                |     #home.tab-pane.fade.show.active(role='tabpanel') ...
                |     #profile.tab-pane.fade(role='tabpanel') ...
                |     #messages.tab-pane.fade(role='tabpanel') ...
                |     #settings.tab-pane.fade(role='tabpanel') ...

    h3#methods Methods
    h4#tab $().tab
    p
        | Activates a list item element and content container. Tab should have either a 
        code.highlighter-rouge data-target
        |  or an 
        code.highlighter-rouge href
        |  targeting a container node in the DOM.

    figure.highlight
        pre
            code.css
                | #myList.list-group(role='tablist')
                |     a.list-group-item.list-group-item-action.active(data-toggle='list', href='#home', role='tab') Home
                |     a.list-group-item.list-group-item-action(data-toggle='list', href='#profile', role='tab') Profile
                |     a.list-group-item.list-group-item-action(data-toggle='list', href='#messages', role='tab') Messages
                |     a.list-group-item.list-group-item-action(data-toggle='list', href='#settings', role='tab') Settings
                | .tab-content
                |     #home.tab-pane.active(role='tabpanel') ...
                |     #profile.tab-pane(role='tabpanel') ...
                |     #messages.tab-pane(role='tabpanel') ...
                |     #settings.tab-pane(role='tabpanel') ...
                | script.
                |     $(function () {
                |         $('#myList a:last-child').tab('show')
                |     })

    h4#tabshow .tab(‘show’)
    p
        | Selects the given list item and shows its associated pane. Any other list item that was previously selected becomes unselected and its associated pane is hidden. 
        strong Returns to the caller before the tab pane has actually been shown
        |  (for example, before the 
        code.highlighter-rouge shown.bs.tab
        |  event occurs).

    figure.highlight
        pre
            code.js
                | $('#someListItem').tab('show')
    
    h3#events Events
    p When showing a new tab, the events fire in the following order:
    ol
        li
            code.highlighter-rouge hide.bs.tab
            |  (on the current active tab)
        li
            code.highlighter-rouge show.bs.tab
            |  (on the to-be-shown tab)
        li
            code.highlighter-rouge hidden.bs.tab
            |  (on the previous active tab, the same one as for the 
            code.highlighter-rouge hide.bs.tab
            |  event)
        li
            code.highlighter-rouge shown.bs.tab
            |  (on the newly-active just-shown tab, the same one as for the 
            code.highlighter-rouge show.bs.tab
            |  event)
    p
        | If no tab was already active, the 
        code.highlighter-rouge hide.bs.tab
        |  and 
        code.highlighter-rouge hidden.bs.tab
        |  events will not be fired.
    table.table.table-bordered.table-striped
        thead
            tr
                th(style='width: 150px;') Event type
                th Description
        tbody
            tr
                td show.bs.tab
                td
                    | This event fires on tab show, but before the new tab has been shown. Use 
                    code event.target
                    |  and 
                    code event.relatedTarget
                    |  to target the active tab and the previous active tab (if available) respectively.
            tr
                td shown.bs.tab
                td
                    | This event fires on tab show after a tab has been shown. Use 
                    code event.target
                    |  and 
                    code event.relatedTarget
                    |  to target the active tab and the previous active tab (if available) respectively.
            tr
                td hide.bs.tab
                td
                    | This event fires when a new tab is to be shown (and thus the previous active tab is to be hidden). Use 
                    code event.target
                    |  and 
                    code event.relatedTarget
                    |  to target the current active tab and the new soon-to-be-active tab, respectively.
            tr
                td hidden.bs.tab
                td
                    | This event fires after a new tab is shown (and thus the previous active tab is hidden). Use 
                    code event.target
                    |  and 
                    code event.relatedTarget
                    |  to target the previous active tab and the new active tab, respectively.

    figure.highlight
        pre
            code.js
                | $('a[data-toggle="list"]').on('shown.bs.tab', function (e) {
                |     e.target // newly activated tab
                |     e.relatedTarget // previous active tab
                | })